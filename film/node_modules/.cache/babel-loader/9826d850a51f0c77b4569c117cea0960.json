{"ast":null,"code":"var _jsxFileName = \"D:\\\\semester 4\\\\pemrograman web 2\\\\UAS\\\\film\\\\src\\\\components\\\\EditMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditFilmPage = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [film, setFilm] = useState({});\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/films/${match.params.id}`);\n        setFilm(response.data);\n        setTitle(response.data.title);\n        setDescription(response.data.description);\n        setImage(response.data.image);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchFilm();\n  }, [match.params.id]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.put(`http://localhost:3000/films/${match.params.id}`, {\n        title,\n        description,\n        image\n      });\n      alert(\"Film updated successfully\"); // Redirect or do something else after successful update\n    } catch (error) {\n      console.error(error);\n      alert(\"Failed to update film\");\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm(\"Are you sure you want to delete this film?\")) {\n      try {\n        await axios.delete(`http://localhost:3000/films/${match.params.id}`);\n        alert(\"Film deleted successfully\"); // Redirect or do something else after successful deletion\n      } catch (error) {\n        console.error(error);\n        alert(\"Failed to delete film\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: image,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary me-2\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditFilmPage, \"ey2TmRLk9pgnBtP8tKMQPbNybQE=\");\n\n_c = EditFilmPage;\nexport default EditFilmPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFilmPage\");","map":{"version":3,"sources":["D:/semester 4/pemrograman web 2/UAS/film/src/components/EditMovie.js"],"names":["React","useState","useEffect","axios","EditFilmPage","match","film","setFilm","title","setTitle","description","setDescription","image","setImage","fetchFilm","response","get","params","id","data","error","console","handleSubmit","e","preventDefault","put","alert","handleDelete","window","confirm","delete","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EditFilmPage = ({ match }) => {\r\n  const [film, setFilm] = useState({});\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchFilm = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/films/${match.params.id}`);\r\n        setFilm(response.data);\r\n        setTitle(response.data.title);\r\n        setDescription(response.data.description);\r\n        setImage(response.data.image);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchFilm();\r\n  }, [match.params.id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.put(`http://localhost:3000/films/${match.params.id}`, {\r\n        title,\r\n        description,\r\n        image,\r\n      });\r\n      alert(\"Film updated successfully\");\r\n      // Redirect or do something else after successful update\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Failed to update film\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete this film?\")) {\r\n      try {\r\n        await axios.delete(`http://localhost:3000/films/${match.params.id}`);\r\n        alert(\"Film deleted successfully\");\r\n        // Redirect or do something else after successful deletion\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(\"Failed to delete film\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Edit Film</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input type=\"text\" className=\"form-control\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea className=\"form-control\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Image</label>\r\n          <input type=\"text\" className=\"form-control\" value={image} onChange={(e) => setImage(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary me-2\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={handleDelete}>\r\n          Delete\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditFilmPage;\r\n"]},"metadata":{},"sourceType":"module"}